// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ForecastBlock /> renders component without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={undefined}
  >
    <IntlProvider
      locale="en"
    >
      <MemoryRouter>
        <InjectIntl(ForecastBlock)
          forecasts={
            Array [
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            ]
          }
          getActiveForecasts={[Function]}
          username="z1wo5"
        />
      </MemoryRouter>
    </IntlProvider>
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <MemoryRouter>
        <InjectIntl(ForecastBlock)
          forecasts={
            Array [
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            ]
          }
          getActiveForecasts={[Function]}
          username="z1wo5"
        />
      </MemoryRouter>,
      "locale": "en",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <InjectIntl(ForecastBlock)
          forecasts={
            Array [
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            ]
          }
          getActiveForecasts={[Function]}
          username="z1wo5"
        />,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "forecasts": Array [
            undefined,
            undefined,
            undefined,
            undefined,
            undefined,
          ],
          "getActiveForecasts": [Function],
          "username": "z1wo5",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <MemoryRouter>
          <InjectIntl(ForecastBlock)
            forecasts={
              Array [
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
              ]
            }
            getActiveForecasts={[Function]}
            username="z1wo5"
          />
        </MemoryRouter>,
        "locale": "en",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <InjectIntl(ForecastBlock)
            forecasts={
              Array [
                undefined,
                undefined,
                undefined,
                undefined,
                undefined,
              ]
            }
            getActiveForecasts={[Function]}
            username="z1wo5"
          />,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "forecasts": Array [
              undefined,
              undefined,
              undefined,
              undefined,
              undefined,
            ],
            "getActiveForecasts": [Function],
            "username": "z1wo5",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
