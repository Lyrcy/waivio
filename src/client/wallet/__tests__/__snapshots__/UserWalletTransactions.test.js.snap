// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`(Component) UserWalletTransactions renders and matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Provider
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <IntlProvider
      locale="en"
    >
      <InjectIntl(UserWalletTransactions)
        currentUsername="hellosteem"
        getMoreUserAccountHistory={[Function]}
        loadingMoreUsersAccountHistory={false}
        totalVestingFundSteem="0"
        totalVestingShares="0"
        transactions={
          Array [
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 HIVE",
                },
              ],
              "timestamp": "0",
            },
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 HIVE",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
          ]
        }
        userHasMoreActions={false}
      />
    </IntlProvider>
    ,
  </Provider>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": Array [
        <IntlProvider
          locale="en"
        >
          <InjectIntl(UserWalletTransactions)
            currentUsername="hellosteem"
            getMoreUserAccountHistory={[Function]}
            loadingMoreUsersAccountHistory={false}
            totalVestingFundSteem="0"
            totalVestingShares="0"
            transactions={
              Array [
                Object {
                  "op": Array [
                    "transfer_to_vesting",
                    Object {
                      "amount": "100 HIVE",
                    },
                  ],
                  "timestamp": "0",
                },
                Object {
                  "op": Array [
                    "transfer",
                    Object {
                      "amount": "100 HIVE",
                      "from": "hellosteem1",
                      "memo": "transfer memo",
                    },
                  ],
                  "timestamp": "0",
                },
              ]
            }
            userHasMoreActions={false}
          />
        </IntlProvider>,
        ",",
      ],
      "value": Object {
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "subscription": Subscription {
          "handleChangeWrapper": [Function],
          "listeners": Object {
            "notify": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": null,
        },
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <InjectIntl(UserWalletTransactions)
            currentUsername="hellosteem"
            getMoreUserAccountHistory={[Function]}
            loadingMoreUsersAccountHistory={false}
            totalVestingFundSteem="0"
            totalVestingShares="0"
            transactions={
              Array [
                Object {
                  "op": Array [
                    "transfer_to_vesting",
                    Object {
                      "amount": "100 HIVE",
                    },
                  ],
                  "timestamp": "0",
                },
                Object {
                  "op": Array [
                    "transfer",
                    Object {
                      "amount": "100 HIVE",
                      "from": "hellosteem1",
                      "memo": "transfer memo",
                    },
                  ],
                  "timestamp": "0",
                },
              ]
            }
            userHasMoreActions={false}
          />,
          "locale": "en",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "currentUsername": "hellosteem",
            "getMoreUserAccountHistory": [Function],
            "loadingMoreUsersAccountHistory": false,
            "totalVestingFundSteem": "0",
            "totalVestingShares": "0",
            "transactions": Array [
              Object {
                "op": Array [
                  "transfer_to_vesting",
                  Object {
                    "amount": "100 HIVE",
                  },
                ],
                "timestamp": "0",
              },
              Object {
                "op": Array [
                  "transfer",
                  Object {
                    "amount": "100 HIVE",
                    "from": "hellosteem1",
                    "memo": "transfer memo",
                  },
                ],
                "timestamp": "0",
              },
            ],
            "userHasMoreActions": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      ",",
    ],
    "type": Object {
      "$$typeof": Symbol(react.provider),
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": Object {
          "$$typeof": Symbol(react.context),
          "_calculateChangedBits": null,
          "_context": [Circular],
        },
        "Provider": [Circular],
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": null,
        "_currentValue2": null,
        "_threadCount": 0,
        "displayName": "ReactRedux",
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": Array [
          <IntlProvider
            locale="en"
          >
            <InjectIntl(UserWalletTransactions)
              currentUsername="hellosteem"
              getMoreUserAccountHistory={[Function]}
              loadingMoreUsersAccountHistory={false}
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transactions={
                Array [
                  Object {
                    "op": Array [
                      "transfer_to_vesting",
                      Object {
                        "amount": "100 HIVE",
                      },
                    ],
                    "timestamp": "0",
                  },
                  Object {
                    "op": Array [
                      "transfer",
                      Object {
                        "amount": "100 HIVE",
                        "from": "hellosteem1",
                        "memo": "transfer memo",
                      },
                    ],
                    "timestamp": "0",
                  },
                ]
              }
              userHasMoreActions={false}
            />
          </IntlProvider>,
          ",",
        ],
        "value": Object {
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "subscription": Subscription {
            "handleChangeWrapper": [Function],
            "listeners": Object {
              "notify": [Function],
            },
            "onStateChange": [Function],
            "parentSub": undefined,
            "store": Object {
              "clearActions": [Function],
              "dispatch": [Function],
              "getActions": [Function],
              "getState": [Function],
              "replaceReducer": [Function],
              "subscribe": [Function],
            },
            "unsubscribe": null,
          },
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <InjectIntl(UserWalletTransactions)
              currentUsername="hellosteem"
              getMoreUserAccountHistory={[Function]}
              loadingMoreUsersAccountHistory={false}
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transactions={
                Array [
                  Object {
                    "op": Array [
                      "transfer_to_vesting",
                      Object {
                        "amount": "100 HIVE",
                      },
                    ],
                    "timestamp": "0",
                  },
                  Object {
                    "op": Array [
                      "transfer",
                      Object {
                        "amount": "100 HIVE",
                        "from": "hellosteem1",
                        "memo": "transfer memo",
                      },
                    ],
                    "timestamp": "0",
                  },
                ]
              }
              userHasMoreActions={false}
            />,
            "locale": "en",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "currentUsername": "hellosteem",
              "getMoreUserAccountHistory": [Function],
              "loadingMoreUsersAccountHistory": false,
              "totalVestingFundSteem": "0",
              "totalVestingShares": "0",
              "transactions": Array [
                Object {
                  "op": Array [
                    "transfer_to_vesting",
                    Object {
                      "amount": "100 HIVE",
                    },
                  ],
                  "timestamp": "0",
                },
                Object {
                  "op": Array [
                    "transfer",
                    Object {
                      "amount": "100 HIVE",
                      "from": "hellosteem1",
                      "memo": "transfer memo",
                    },
                  ],
                  "timestamp": "0",
                },
              ],
              "userHasMoreActions": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        ",",
      ],
      "type": Object {
        "$$typeof": Symbol(react.provider),
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": Object {
            "$$typeof": Symbol(react.context),
            "_calculateChangedBits": null,
            "_context": [Circular],
          },
          "Provider": [Circular],
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": null,
          "_currentValue2": null,
          "_threadCount": 0,
          "displayName": "ReactRedux",
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`(Component) UserWalletTransactions with default prop values renders and matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserWalletTransactions
    actions={Array []}
    currentUsername="hellosteem"
    demoTransactions={Array []}
    getMoreUserAccountHistory={[Function]}
    getMoreUserTransactionHistory={[Function]}
    hasMore={false}
    loadingMoreUsersAccountHistory={false}
    totalVestingFundSteem="0"
    totalVestingShares="0"
    transactions={
      Array [
        Object {
          "op": Array [
            "transfer_to_vesting",
            Object {
              "amount": "100 HIVE",
            },
          ],
          "timestamp": "0",
        },
        Object {
          "op": Array [
            "transfer",
            Object {
              "amount": "100 HIVE",
              "from": "hellosteem1",
              "memo": "transfer memo",
            },
          ],
          "timestamp": "0",
        },
      ]
    }
    userHasMoreActions={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <ReduxInfiniteScroll
        className=""
        containerHeight="100%"
        elementIsScrollable={false}
        hasMore={false}
        holderType="div"
        horizontal={false}
        items={Array []}
        loadMore={[Function]}
        loader={
          <div
            className="UserWalletTransactions__loader"
          >
            <Loading
              center={true}
            />
          </div>
        }
        loadingMore={false}
        showLoader={true}
        threshold={500}
      >
        <div />
        <WalletTransaction
          currentUsername="hellosteem"
          isGuestPage={false}
          totalVestingFundSteem="0"
          totalVestingShares="0"
          transaction={
            Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 HIVE",
                },
              ],
              "timestamp": "0",
            }
          }
          transactionHistory={Object {}}
        />
        <WalletTransaction
          currentUsername="hellosteem"
          isGuestPage={false}
          totalVestingFundSteem="0"
          totalVestingShares="0"
          transaction={
            Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 HIVE",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            }
          }
          transactionHistory={Object {}}
        />
      </ReduxInfiniteScroll>,
      "className": "UserWalletTransactions",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <div />,
          Array [
            <WalletTransaction
              currentUsername="hellosteem"
              isGuestPage={false}
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transaction={
                Object {
                  "op": Array [
                    "transfer_to_vesting",
                    Object {
                      "amount": "100 HIVE",
                    },
                  ],
                  "timestamp": "0",
                }
              }
              transactionHistory={Object {}}
            />,
            <WalletTransaction
              currentUsername="hellosteem"
              isGuestPage={false}
              totalVestingFundSteem="0"
              totalVestingShares="0"
              transaction={
                Object {
                  "op": Array [
                    "transfer",
                    Object {
                      "amount": "100 HIVE",
                      "from": "hellosteem1",
                      "memo": "transfer memo",
                    },
                  ],
                  "timestamp": "0",
                }
              }
              transactionHistory={Object {}}
            />,
          ],
        ],
        "className": "",
        "containerHeight": "100%",
        "elementIsScrollable": false,
        "hasMore": false,
        "holderType": "div",
        "horizontal": false,
        "items": Array [],
        "loadMore": [Function],
        "loader": <div
          className="UserWalletTransactions__loader"
        >
          <Loading
            center={true}
          />
        </div>,
        "loadingMore": false,
        "showLoader": true,
        "threshold": 500,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "function",
          "props": Object {
            "currentUsername": "hellosteem",
            "isGuestPage": false,
            "totalVestingFundSteem": "0",
            "totalVestingShares": "0",
            "transaction": Object {
              "op": Array [
                "transfer_to_vesting",
                Object {
                  "amount": "100 HIVE",
                },
              ],
              "timestamp": "0",
            },
            "transactionHistory": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": "0",
          "nodeType": "function",
          "props": Object {
            "currentUsername": "hellosteem",
            "isGuestPage": false,
            "totalVestingFundSteem": "0",
            "totalVestingShares": "0",
            "transaction": Object {
              "op": Array [
                "transfer",
                Object {
                  "amount": "100 HIVE",
                  "from": "hellosteem1",
                  "memo": "transfer memo",
                },
              ],
              "timestamp": "0",
            },
            "transactionHistory": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ReduxInfiniteScroll
          className=""
          containerHeight="100%"
          elementIsScrollable={false}
          hasMore={false}
          holderType="div"
          horizontal={false}
          items={Array []}
          loadMore={[Function]}
          loader={
            <div
              className="UserWalletTransactions__loader"
            >
              <Loading
                center={true}
              />
            </div>
          }
          loadingMore={false}
          showLoader={true}
          threshold={500}
        >
          <div />
          <WalletTransaction
            currentUsername="hellosteem"
            isGuestPage={false}
            totalVestingFundSteem="0"
            totalVestingShares="0"
            transaction={
              Object {
                "op": Array [
                  "transfer_to_vesting",
                  Object {
                    "amount": "100 HIVE",
                  },
                ],
                "timestamp": "0",
              }
            }
            transactionHistory={Object {}}
          />
          <WalletTransaction
            currentUsername="hellosteem"
            isGuestPage={false}
            totalVestingFundSteem="0"
            totalVestingShares="0"
            transaction={
              Object {
                "op": Array [
                  "transfer",
                  Object {
                    "amount": "100 HIVE",
                    "from": "hellosteem1",
                    "memo": "transfer memo",
                  },
                ],
                "timestamp": "0",
              }
            }
            transactionHistory={Object {}}
          />
        </ReduxInfiniteScroll>,
        "className": "UserWalletTransactions",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <div />,
            Array [
              <WalletTransaction
                currentUsername="hellosteem"
                isGuestPage={false}
                totalVestingFundSteem="0"
                totalVestingShares="0"
                transaction={
                  Object {
                    "op": Array [
                      "transfer_to_vesting",
                      Object {
                        "amount": "100 HIVE",
                      },
                    ],
                    "timestamp": "0",
                  }
                }
                transactionHistory={Object {}}
              />,
              <WalletTransaction
                currentUsername="hellosteem"
                isGuestPage={false}
                totalVestingFundSteem="0"
                totalVestingShares="0"
                transaction={
                  Object {
                    "op": Array [
                      "transfer",
                      Object {
                        "amount": "100 HIVE",
                        "from": "hellosteem1",
                        "memo": "transfer memo",
                      },
                    ],
                    "timestamp": "0",
                  }
                }
                transactionHistory={Object {}}
              />,
            ],
          ],
          "className": "",
          "containerHeight": "100%",
          "elementIsScrollable": false,
          "hasMore": false,
          "holderType": "div",
          "horizontal": false,
          "items": Array [],
          "loadMore": [Function],
          "loader": <div
            className="UserWalletTransactions__loader"
          >
            <Loading
              center={true}
            />
          </div>,
          "loadingMore": false,
          "showLoader": true,
          "threshold": 500,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "currentUsername": "hellosteem",
              "isGuestPage": false,
              "totalVestingFundSteem": "0",
              "totalVestingShares": "0",
              "transaction": Object {
                "op": Array [
                  "transfer_to_vesting",
                  Object {
                    "amount": "100 HIVE",
                  },
                ],
                "timestamp": "0",
              },
              "transactionHistory": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "currentUsername": "hellosteem",
              "isGuestPage": false,
              "totalVestingFundSteem": "0",
              "totalVestingShares": "0",
              "transaction": Object {
                "op": Array [
                  "transfer",
                  Object {
                    "amount": "100 HIVE",
                    "from": "hellosteem1",
                    "memo": "transfer memo",
                  },
                ],
                "timestamp": "0",
              },
              "transactionHistory": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
  Symbol(enzyme.__childContext__): null,
}
`;
