// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ReferralDetailsView create detail's page snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "getWrappingComponentRenderer": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
    "wrapInvoke": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": BrowserRouter {
      "_reactInternalFiber": FiberNode {
        "_debugHookTypes": null,
        "_debugID": 130,
        "_debugIsCurrentlyTiming": false,
        "_debugNeedsRemount": false,
        "_debugOwner": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 128,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "mount": true,
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 125,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 125,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "callbackExpirationTime": 0,
                "callbackNode": null,
                "callbackPriority": 90,
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedExpirationTime": 0,
                "finishedWork": null,
                "firstPendingTime": 0,
                "firstSuspendedTime": 0,
                "hydrate": false,
                "interactionThreadID": 17,
                "lastExpiredTime": 0,
                "lastPingedTime": 0,
                "lastSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextKnownPendingLevel": 0,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseQueue": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": [Circular],
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "priority": 97,
                  "suspenseConfig": null,
                  "tag": 0,
                },
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 0,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  }
                }
                props={
                  Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  }
                }
                refProp={null}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": FiberRootNode {
              "callbackExpirationTime": 0,
              "callbackNode": null,
              "callbackPriority": 90,
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "finishedExpirationTime": 0,
              "finishedWork": null,
              "firstPendingTime": 0,
              "firstSuspendedTime": 0,
              "hydrate": false,
              "interactionThreadID": 17,
              "lastExpiredTime": 0,
              "lastPingedTime": 0,
              "lastSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextKnownPendingLevel": 0,
              "pendingChildren": null,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "tag": 0,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "__reactInternalMemoizedMergedChildContext": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "state": Object {
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "mount": true,
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "mount": true,
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "wrappingComponentProps": null,
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 132,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 134,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 0,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "memoizedProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Router {
            "_isMounted": true,
            "_pendingLocation": null,
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "childExpirationTime": 0,
        "dependencies": null,
        "effectTag": 5,
        "elementType": [Function],
        "expirationTime": 0,
        "firstEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 136,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 138,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 140,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": null,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": null,
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": null,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": null,
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": Object {
              "expirationTime": 0,
              "firstContext": Object {
                "context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
                "next": null,
                "observedBits": 1073741823,
              },
              "responders": null,
            },
            "effectTag": 1,
            "elementType": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 9,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.context),
              "_calculateChangedBits": null,
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": [Circular],
                "Provider": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": [Circular],
                },
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "component": <ReferralDetailsView
              data={Object {}}
              isAuthenticated={true}
              mockData={
                Object {
                  "additionData": Object {
                    "feesValue": "$0.25",
                    "offersPercent": 5,
                    "offersReward": 5,
                  },
                  "campaignPercent": "50%",
                  "firstPercent": "50%",
                  "indexPercent": "30%",
                  "referralDuration": 90,
                  "referralsPercent": "20%",
                  "secondPercent": "40%",
                  "suspendedTimer": 30,
                  "username": "vallon",
                }
              }
            />,
            "path": "/rewards/referral-details/vallon",
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "component": <ReferralDetailsView
              data={Object {}}
              isAuthenticated={true}
              mockData={
                Object {
                  "additionData": Object {
                    "feesValue": "$0.25",
                    "offersPercent": 5,
                    "offersReward": 5,
                  },
                  "campaignPercent": "50%",
                  "firstPercent": "50%",
                  "indexPercent": "30%",
                  "referralDuration": 90,
                  "referralsPercent": "20%",
                  "secondPercent": "40%",
                  "suspendedTimer": 30,
                  "username": "vallon",
                }
              }
            />,
            "path": "/rewards/referral-details/vallon",
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 134,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 132,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Router {
                "_isMounted": true,
                "_pendingLocation": null,
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "unlisten": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 0,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "expirationTime": 0,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 132,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "memoizedState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Router {
                "_isMounted": true,
                "_pendingLocation": null,
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "refs": Object {},
                "state": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "unlisten": [Function],
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Route {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": null,
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "index": 0,
        "key": null,
        "lastEffect": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 132,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": [Circular],
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 134,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 0,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "memoizedProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Router {
            "_isMounted": true,
            "_pendingLocation": null,
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "refs": Object {},
            "state": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "unlisten": [Function],
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "memoizedProps": Object {
          "children": <Route
            component={
              <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />
            }
            path="/rewards/referral-details/vallon"
          />,
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "now": [Function],
            "onError": [Function],
            "textComponent": "span",
            "timeZone": null,
          },
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "children": <Route
            component={
              <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />
            }
            path="/rewards/referral-details/vallon"
          />,
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "now": [Function],
            "onError": [Function],
            "textComponent": "span",
            "timeZone": null,
          },
        },
        "ref": null,
        "return": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 128,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": [Circular],
          "memoizedProps": Object {
            "Component": [Function],
            "context": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "memoizedState": Object {
            "context": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "mount": true,
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "wrappingComponentProps": null,
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "Component": [Function],
            "context": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "props": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "refProp": null,
            "wrappingComponentProps": null,
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 125,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 125,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "callbackExpirationTime": 0,
                "callbackNode": null,
                "callbackPriority": 90,
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedExpirationTime": 0,
                "finishedWork": null,
                "firstPendingTime": 0,
                "firstSuspendedTime": 0,
                "hydrate": false,
                "interactionThreadID": 17,
                "lastExpiredTime": 0,
                "lastPingedTime": 0,
                "lastSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextKnownPendingLevel": 0,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseQueue": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": [Circular],
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "priority": 97,
                  "suspenseConfig": null,
                  "tag": 0,
                },
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 0,
            "elementType": null,
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={
                  Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  }
                }
                props={
                  Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  }
                }
                refProp={null}
                wrappingComponentProps={null}
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": FiberRootNode {
              "callbackExpirationTime": 0,
              "callbackNode": null,
              "callbackPriority": 90,
              "containerInfo": <div />,
              "context": Object {},
              "current": [Circular],
              "finishedExpirationTime": 0,
              "finishedWork": null,
              "firstPendingTime": 0,
              "firstSuspendedTime": 0,
              "hydrate": false,
              "interactionThreadID": 17,
              "lastExpiredTime": 0,
              "lastPingedTime": 0,
              "lastSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextKnownPendingLevel": 0,
              "pendingChildren": null,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "tag": 0,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "__reactInternalMemoizedMergedChildContext": Object {
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "refs": Object {},
            "state": Object {
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "mount": true,
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "wrappingComponentProps": null,
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "mount": true,
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "wrappingComponentProps": null,
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": Object {
          "baseQueue": null,
          "baseState": null,
          "effects": null,
          "shared": Object {
            "pending": null,
          },
        },
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "/",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
      "props": Object {
        "children": <Route
          component={
            <ReferralDetailsView
              data={Object {}}
              isAuthenticated={true}
              mockData={
                Object {
                  "additionData": Object {
                    "feesValue": "$0.25",
                    "offersPercent": 5,
                    "offersReward": 5,
                  },
                  "campaignPercent": "50%",
                  "firstPercent": "50%",
                  "indexPercent": "30%",
                  "referralDuration": 90,
                  "referralsPercent": "20%",
                  "secondPercent": "40%",
                  "suspendedTimer": 30,
                  "username": "vallon",
                }
              }
            />
          }
          path="/rewards/referral-details/vallon"
        />,
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {},
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        },
      },
      "refs": Object {},
      "state": null,
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <Route
        component={
          <ReferralDetailsView
            data={Object {}}
            isAuthenticated={true}
            mockData={
              Object {
                "additionData": Object {
                  "feesValue": "$0.25",
                  "offersPercent": 5,
                  "offersReward": 5,
                },
                "campaignPercent": "50%",
                "firstPercent": "50%",
                "indexPercent": "30%",
                "referralDuration": 90,
                "referralsPercent": "20%",
                "secondPercent": "40%",
                "suspendedTimer": 30,
                "username": "vallon",
              }
            }
          />
        }
        path="/rewards/referral-details/vallon"
      />,
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": Router {
        "_isMounted": true,
        "_pendingLocation": null,
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 132,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 130,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 128,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 125,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": [Circular],
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "priority": 97,
                      "suspenseConfig": null,
                      "tag": 0,
                    },
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    props={
                      Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "callbackExpirationTime": 0,
                  "callbackNode": null,
                  "callbackPriority": 90,
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedExpirationTime": 0,
                  "finishedWork": null,
                  "firstPendingTime": 0,
                  "firstSuspendedTime": 0,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "lastExpiredTime": 0,
                  "lastPingedTime": 0,
                  "lastSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextKnownPendingLevel": 0,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 128,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 125,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": [Circular],
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "priority": 97,
                      "suspenseConfig": null,
                      "tag": 0,
                    },
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    props={
                      Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "callbackExpirationTime": 0,
                  "callbackNode": null,
                  "callbackPriority": 90,
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedExpirationTime": 0,
                  "finishedWork": null,
                  "firstPendingTime": 0,
                  "firstSuspendedTime": 0,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "lastExpiredTime": 0,
                  "lastPingedTime": 0,
                  "lastSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextKnownPendingLevel": 0,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 134,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 0,
            "elementType": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "value": Object {
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "match": Object {
                  "isExact": true,
                  "params": Object {},
                  "path": "/",
                  "url": "/",
                },
                "staticContext": undefined,
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": null,
            "tag": 10,
            "treeBaseDuration": 0,
            "type": Object {
              "$$typeof": Symbol(react.provider),
              "_context": Object {
                "$$typeof": Symbol(react.context),
                "Consumer": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": [Circular],
                },
                "Provider": [Circular],
                "_calculateChangedBits": null,
                "_currentRenderer": Object {},
                "_currentRenderer2": null,
                "_currentValue": undefined,
                "_currentValue2": undefined,
                "_threadCount": 0,
                "displayName": "Router",
              },
            },
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "memoizedProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "memoizedState": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 130,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 128,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 125,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": [Circular],
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "priority": 97,
                      "suspenseConfig": null,
                      "tag": 0,
                    },
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    props={
                      Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "callbackExpirationTime": 0,
                  "callbackNode": null,
                  "callbackPriority": 90,
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedExpirationTime": 0,
                  "finishedWork": null,
                  "firstPendingTime": 0,
                  "firstSuspendedTime": 0,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "lastExpiredTime": 0,
                  "lastPingedTime": 0,
                  "lastSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextKnownPendingLevel": 0,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "intl": Object {
                "defaultFormats": Object {},
                "defaultLocale": "en",
                "formatDate": [Function],
                "formatHTMLMessage": [Function],
                "formatMessage": [Function],
                "formatNumber": [Function],
                "formatPlural": [Function],
                "formatRelative": [Function],
                "formatTime": [Function],
                "formats": Object {},
                "formatters": Object {
                  "getDateTimeFormat": [Function],
                  "getMessageFormat": [Function],
                  "getNumberFormat": [Function],
                  "getPluralFormat": [Function],
                  "getRelativeFormat": [Function],
                },
                "locale": "en",
                "messages": Object {},
                "now": [Function],
                "onError": [Function],
                "textComponent": "span",
                "timeZone": null,
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 128,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 1,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "memoizedState": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 125,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": [Circular],
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 1073741823,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": null,
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": Object {
                      "callback": null,
                      "expirationTime": 1073741823,
                      "next": [Circular],
                      "payload": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "priority": 97,
                      "suspenseConfig": null,
                      "tag": 0,
                    },
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": null,
                "memoizedState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    props={
                      Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "callbackExpirationTime": 0,
                  "callbackNode": null,
                  "callbackPriority": 90,
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedExpirationTime": 0,
                  "finishedWork": null,
                  "firstPendingTime": 0,
                  "firstSuspendedTime": 0,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "lastExpiredTime": 0,
                  "lastPingedTime": 0,
                  "lastSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextKnownPendingLevel": 0,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": WrapperComponent {
                "__reactInternalMemoizedMergedChildContext": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "refs": Object {},
                "state": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": BrowserRouter {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "children": <Route
            component={
              <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />
            }
            path="/rewards/referral-details/vallon"
          />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "refs": Object {},
        "state": Object {
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
        },
        "unlisten": [Function],
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Route
          component={
            <ReferralDetailsView
              data={Object {}}
              isAuthenticated={true}
              mockData={
                Object {
                  "additionData": Object {
                    "feesValue": "$0.25",
                    "offersPercent": 5,
                    "offersReward": 5,
                  },
                  "campaignPercent": "50%",
                  "firstPercent": "50%",
                  "indexPercent": "30%",
                  "referralDuration": 90,
                  "referralsPercent": "20%",
                  "secondPercent": "40%",
                  "suspendedTimer": 30,
                  "username": "vallon",
                }
              }
            />
          }
          path="/rewards/referral-details/vallon"
        />,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": Route {
          "_reactInternalFiber": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": BrowserRouter {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": BrowserRouter {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": BrowserRouter {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 130,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 128,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 1,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "memoizedState": Object {
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "mount": true,
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "wrappingComponentProps": null,
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "Component": [Function],
                      "context": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refProp": null,
                      "wrappingComponentProps": null,
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 125,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": [Circular],
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 1073741823,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": null,
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": Object {
                            "callback": null,
                            "expirationTime": 1073741823,
                            "next": [Circular],
                            "payload": Object {
                              "element": <WrapperComponent
                                Component={[Function]}
                                context={
                                  Object {
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                props={
                                  Object {
                                    "children": <Route
                                      component={
                                        <ReferralDetailsView
                                          data={Object {}}
                                          isAuthenticated={true}
                                          mockData={
                                            Object {
                                              "additionData": Object {
                                                "feesValue": "$0.25",
                                                "offersPercent": 5,
                                                "offersReward": 5,
                                              },
                                              "campaignPercent": "50%",
                                              "firstPercent": "50%",
                                              "indexPercent": "30%",
                                              "referralDuration": 90,
                                              "referralsPercent": "20%",
                                              "secondPercent": "40%",
                                              "suspendedTimer": 30,
                                              "username": "vallon",
                                            }
                                          }
                                        />
                                      }
                                      path="/rewards/referral-details/vallon"
                                    />,
                                    "intl": Object {
                                      "defaultFormats": Object {},
                                      "defaultLocale": "en",
                                      "formatDate": [Function],
                                      "formatHTMLMessage": [Function],
                                      "formatMessage": [Function],
                                      "formatNumber": [Function],
                                      "formatPlural": [Function],
                                      "formatRelative": [Function],
                                      "formatTime": [Function],
                                      "formats": Object {},
                                      "formatters": Object {
                                        "getDateTimeFormat": [Function],
                                        "getMessageFormat": [Function],
                                        "getNumberFormat": [Function],
                                        "getPluralFormat": [Function],
                                        "getRelativeFormat": [Function],
                                      },
                                      "locale": "en",
                                      "messages": Object {},
                                      "now": [Function],
                                      "onError": [Function],
                                      "textComponent": "span",
                                      "timeZone": null,
                                    },
                                  }
                                }
                                refProp={null}
                                wrappingComponentProps={null}
                              />,
                            },
                            "priority": 97,
                            "suspenseConfig": null,
                            "tag": 0,
                          },
                          "baseState": null,
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": null,
                      "memoizedState": Object {
                        "element": <WrapperComponent
                          Component={[Function]}
                          context={
                            Object {
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          props={
                            Object {
                              "children": <Route
                                component={
                                  <ReferralDetailsView
                                    data={Object {}}
                                    isAuthenticated={true}
                                    mockData={
                                      Object {
                                        "additionData": Object {
                                          "feesValue": "$0.25",
                                          "offersPercent": 5,
                                          "offersReward": 5,
                                        },
                                        "campaignPercent": "50%",
                                        "firstPercent": "50%",
                                        "indexPercent": "30%",
                                        "referralDuration": 90,
                                        "referralsPercent": "20%",
                                        "secondPercent": "40%",
                                        "suspendedTimer": 30,
                                        "username": "vallon",
                                      }
                                    }
                                  />
                                }
                                path="/rewards/referral-details/vallon"
                              />,
                              "intl": Object {
                                "defaultFormats": Object {},
                                "defaultLocale": "en",
                                "formatDate": [Function],
                                "formatHTMLMessage": [Function],
                                "formatMessage": [Function],
                                "formatNumber": [Function],
                                "formatPlural": [Function],
                                "formatRelative": [Function],
                                "formatTime": [Function],
                                "formats": Object {},
                                "formatters": Object {
                                  "getDateTimeFormat": [Function],
                                  "getMessageFormat": [Function],
                                  "getNumberFormat": [Function],
                                  "getPluralFormat": [Function],
                                  "getRelativeFormat": [Function],
                                },
                                "locale": "en",
                                "messages": Object {},
                                "now": [Function],
                                "onError": [Function],
                                "textComponent": "span",
                                "timeZone": null,
                              },
                            }
                          }
                          refProp={null}
                          wrappingComponentProps={null}
                        />,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": null,
                      "ref": null,
                      "return": null,
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": FiberRootNode {
                        "callbackExpirationTime": 0,
                        "callbackNode": null,
                        "callbackPriority": 90,
                        "containerInfo": <div />,
                        "context": Object {},
                        "current": [Circular],
                        "finishedExpirationTime": 0,
                        "finishedWork": null,
                        "firstPendingTime": 0,
                        "firstSuspendedTime": 0,
                        "hydrate": false,
                        "interactionThreadID": 17,
                        "lastExpiredTime": 0,
                        "lastPingedTime": 0,
                        "lastSuspendedTime": 0,
                        "memoizedInteractions": Set {},
                        "nextKnownPendingLevel": 0,
                        "pendingChildren": null,
                        "pendingContext": null,
                        "pendingInteractionMap": Map {},
                        "pingCache": null,
                        "tag": 0,
                        "timeoutHandle": -1,
                      },
                      "tag": 3,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": WrapperComponent {
                      "__reactInternalMemoizedMergedChildContext": Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "refs": Object {},
                      "state": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": BrowserRouter {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "component": <ReferralDetailsView
              data={Object {}}
              isAuthenticated={true}
              mockData={
                Object {
                  "additionData": Object {
                    "feesValue": "$0.25",
                    "offersPercent": 5,
                    "offersReward": 5,
                  },
                  "campaignPercent": "50%",
                  "firstPercent": "50%",
                  "indexPercent": "30%",
                  "referralDuration": 90,
                  "referralsPercent": "20%",
                  "secondPercent": "40%",
                  "suspendedTimer": 30,
                  "username": "vallon",
                }
              }
            />,
            "path": "/rewards/referral-details/vallon",
          },
          "refs": Object {},
          "state": null,
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "component": <ReferralDetailsView
            data={Object {}}
            isAuthenticated={true}
            mockData={
              Object {
                "additionData": Object {
                  "feesValue": "$0.25",
                  "offersPercent": 5,
                  "offersReward": 5,
                },
                "campaignPercent": "50%",
                "firstPercent": "50%",
                "indexPercent": "30%",
                "referralDuration": 90,
                "referralsPercent": "20%",
                "secondPercent": "40%",
                "suspendedTimer": 30,
                "username": "vallon",
              }
            }
          />,
          "path": "/rewards/referral-details/vallon",
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": BrowserRouter {
        "_reactInternalFiber": FiberNode {
          "_debugHookTypes": null,
          "_debugID": 130,
          "_debugIsCurrentlyTiming": false,
          "_debugNeedsRemount": false,
          "_debugOwner": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 128,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "mount": true,
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 125,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 125,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "callbackExpirationTime": 0,
                  "callbackNode": null,
                  "callbackPriority": 90,
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedExpirationTime": 0,
                  "finishedWork": null,
                  "firstPendingTime": 0,
                  "firstSuspendedTime": 0,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "lastExpiredTime": 0,
                  "lastPingedTime": 0,
                  "lastSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextKnownPendingLevel": 0,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseQueue": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": [Circular],
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        props={
                          Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "priority": 97,
                    "suspenseConfig": null,
                    "tag": 0,
                  },
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 132,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Router {
                      "_isMounted": true,
                      "_pendingLocation": null,
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "unlisten": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 132,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Router {
                      "_isMounted": true,
                      "_pendingLocation": null,
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "unlisten": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "callbackExpirationTime": 0,
                "callbackNode": null,
                "callbackPriority": 90,
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedExpirationTime": 0,
                "finishedWork": null,
                "firstPendingTime": 0,
                "firstSuspendedTime": 0,
                "hydrate": false,
                "interactionThreadID": 17,
                "lastExpiredTime": 0,
                "lastPingedTime": 0,
                "lastSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextKnownPendingLevel": 0,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    props={
                      Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "__reactInternalMemoizedMergedChildContext": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "state": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 132,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "_isMounted": true,
              "_pendingLocation": null,
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "childExpirationTime": 0,
          "dependencies": null,
          "effectTag": 5,
          "elementType": [Function],
          "expirationTime": 0,
          "firstEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 136,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 138,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 140,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": null,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": null,
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": Object {
                "expirationTime": 0,
                "firstContext": Object {
                  "context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                  "next": null,
                  "observedBits": 1073741823,
                },
                "responders": null,
              },
              "effectTag": 1,
              "elementType": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 9,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.context),
                "_calculateChangedBits": null,
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": [Circular],
                  "Provider": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": [Circular],
                  },
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 132,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "memoizedState": Object {
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Router {
                  "_isMounted": true,
                  "_pendingLocation": null,
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "refs": Object {},
                  "state": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "unlisten": [Function],
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Route {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "refs": Object {},
              "state": null,
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": null,
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "index": 0,
          "key": null,
          "lastEffect": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 132,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": [Circular],
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Router {
              "_isMounted": true,
              "_pendingLocation": null,
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
              },
              "refs": Object {},
              "state": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "unlisten": [Function],
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "memoizedProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "intl": Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralFormat": [Function],
                "getRelativeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {},
              "now": [Function],
              "onError": [Function],
              "textComponent": "span",
              "timeZone": null,
            },
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "intl": Object {
              "defaultFormats": Object {},
              "defaultLocale": "en",
              "formatDate": [Function],
              "formatHTMLMessage": [Function],
              "formatMessage": [Function],
              "formatNumber": [Function],
              "formatPlural": [Function],
              "formatRelative": [Function],
              "formatTime": [Function],
              "formats": Object {},
              "formatters": Object {
                "getDateTimeFormat": [Function],
                "getMessageFormat": [Function],
                "getNumberFormat": [Function],
                "getPluralFormat": [Function],
                "getRelativeFormat": [Function],
              },
              "locale": "en",
              "messages": Object {},
              "now": [Function],
              "onError": [Function],
              "textComponent": "span",
              "timeZone": null,
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 128,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": Object {
              "Component": [Function],
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "memoizedState": Object {
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "mount": true,
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "wrappingComponentProps": null,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "Component": [Function],
              "context": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "props": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "refProp": null,
              "wrappingComponentProps": null,
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 125,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 125,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": FiberRootNode {
                  "callbackExpirationTime": 0,
                  "callbackNode": null,
                  "callbackPriority": 90,
                  "containerInfo": <div />,
                  "context": Object {},
                  "current": [Circular],
                  "finishedExpirationTime": 0,
                  "finishedWork": null,
                  "firstPendingTime": 0,
                  "firstSuspendedTime": 0,
                  "hydrate": false,
                  "interactionThreadID": 17,
                  "lastExpiredTime": 0,
                  "lastPingedTime": 0,
                  "lastSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextKnownPendingLevel": 0,
                  "pendingChildren": null,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "tag": 0,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseQueue": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": [Circular],
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        props={
                          Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "priority": 97,
                    "suspenseConfig": null,
                    "tag": 0,
                  },
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 132,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Router {
                      "_isMounted": true,
                      "_pendingLocation": null,
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "unlisten": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 132,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "memoizedState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Router {
                      "_isMounted": true,
                      "_pendingLocation": null,
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                      },
                      "refs": Object {},
                      "state": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "unlisten": [Function],
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": Object {
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                      },
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    }
                  }
                  refProp={null}
                  wrappingComponentProps={null}
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": FiberRootNode {
                "callbackExpirationTime": 0,
                "callbackNode": null,
                "callbackPriority": 90,
                "containerInfo": <div />,
                "context": Object {},
                "current": [Circular],
                "finishedExpirationTime": 0,
                "finishedWork": null,
                "firstPendingTime": 0,
                "firstSuspendedTime": 0,
                "hydrate": false,
                "interactionThreadID": 17,
                "lastExpiredTime": 0,
                "lastPingedTime": 0,
                "lastSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextKnownPendingLevel": 0,
                "pendingChildren": null,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "tag": 0,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={
                      Object {
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    props={
                      Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      }
                    }
                    refProp={null}
                    wrappingComponentProps={null}
                  />,
                },
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "__reactInternalMemoizedMergedChildContext": Object {
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refProp": null,
                "wrappingComponentProps": null,
              },
              "refs": Object {},
              "state": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "context": Object {
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "mount": true,
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "wrappingComponentProps": null,
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": Object {
            "baseQueue": null,
            "baseState": null,
            "effects": null,
            "shared": Object {
              "pending": null,
            },
          },
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
        "props": Object {
          "children": <Route
            component={
              <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />
            }
            path="/rewards/referral-details/vallon"
          />,
          "intl": Object {
            "defaultFormats": Object {},
            "defaultLocale": "en",
            "formatDate": [Function],
            "formatHTMLMessage": [Function],
            "formatMessage": [Function],
            "formatNumber": [Function],
            "formatPlural": [Function],
            "formatRelative": [Function],
            "formatTime": [Function],
            "formats": Object {},
            "formatters": Object {
              "getDateTimeFormat": [Function],
              "getMessageFormat": [Function],
              "getNumberFormat": [Function],
              "getPluralFormat": [Function],
              "getRelativeFormat": [Function],
            },
            "locale": "en",
            "messages": Object {},
            "now": [Function],
            "onError": [Function],
            "textComponent": "span",
            "timeZone": null,
          },
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <Route
          component={
            <ReferralDetailsView
              data={Object {}}
              isAuthenticated={true}
              mockData={
                Object {
                  "additionData": Object {
                    "feesValue": "$0.25",
                    "offersPercent": 5,
                    "offersReward": 5,
                  },
                  "campaignPercent": "50%",
                  "firstPercent": "50%",
                  "indexPercent": "30%",
                  "referralDuration": 90,
                  "referralsPercent": "20%",
                  "secondPercent": "40%",
                  "suspendedTimer": 30,
                  "username": "vallon",
                }
              }
            />
          }
          path="/rewards/referral-details/vallon"
        />,
        "intl": Object {
          "defaultFormats": Object {},
          "defaultLocale": "en",
          "formatDate": [Function],
          "formatHTMLMessage": [Function],
          "formatMessage": [Function],
          "formatNumber": [Function],
          "formatPlural": [Function],
          "formatRelative": [Function],
          "formatTime": [Function],
          "formats": Object {},
          "formatters": Object {
            "getDateTimeFormat": [Function],
            "getMessageFormat": [Function],
            "getNumberFormat": [Function],
            "getPluralFormat": [Function],
            "getRelativeFormat": [Function],
          },
          "locale": "en",
          "messages": Object {},
          "now": [Function],
          "onError": [Function],
          "textComponent": "span",
          "timeZone": null,
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": Router {
          "_isMounted": true,
          "_pendingLocation": null,
          "_reactInternalFiber": FiberNode {
            "_debugHookTypes": null,
            "_debugID": 132,
            "_debugIsCurrentlyTiming": false,
            "_debugNeedsRemount": false,
            "_debugOwner": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 130,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 128,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": [Circular],
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "priority": 97,
                        "suspenseConfig": null,
                        "tag": 0,
                      },
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 136,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 138,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 140,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 10,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 134,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Route {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "component": <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />,
                        "path": "/rewards/referral-details/vallon",
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        props={
                          Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 128,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": [Circular],
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "priority": 97,
                        "suspenseConfig": null,
                        "tag": 0,
                      },
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 136,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 138,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 140,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 10,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 134,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Route {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "component": <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />,
                        "path": "/rewards/referral-details/vallon",
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        props={
                          Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 134,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": [Circular],
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 0,
              "elementType": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "value": Object {
                  "history": Object {
                    "action": "POP",
                    "block": [Function],
                    "createHref": [Function],
                    "go": [Function],
                    "goBack": [Function],
                    "goForward": [Function],
                    "length": 1,
                    "listen": [Function],
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "push": [Function],
                    "replace": [Function],
                  },
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "match": Object {
                    "isExact": true,
                    "params": Object {},
                    "path": "/",
                    "url": "/",
                  },
                  "staticContext": undefined,
                },
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": null,
              "tag": 10,
              "treeBaseDuration": 0,
              "type": Object {
                "$$typeof": Symbol(react.provider),
                "_context": Object {
                  "$$typeof": Symbol(react.context),
                  "Consumer": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": [Circular],
                  },
                  "Provider": [Circular],
                  "_calculateChangedBits": null,
                  "_currentRenderer": Object {},
                  "_currentRenderer2": null,
                  "_currentValue": undefined,
                  "_currentValue2": undefined,
                  "_threadCount": 0,
                  "displayName": "Router",
                },
              },
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "dependencies": null,
            "effectTag": 5,
            "elementType": [Function],
            "expirationTime": 0,
            "firstEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "index": 0,
            "key": null,
            "lastEffect": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Route {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "props": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "memoizedProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "memoizedState": Object {
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": <Route
                component={
                  <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />
                }
                path="/rewards/referral-details/vallon"
              />,
              "history": Object {
                "action": "POP",
                "block": [Function],
                "createHref": [Function],
                "go": [Function],
                "goBack": [Function],
                "goForward": [Function],
                "length": 1,
                "listen": [Function],
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
                "push": [Function],
                "replace": [Function],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 130,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 128,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": [Circular],
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "priority": 97,
                        "suspenseConfig": null,
                        "tag": 0,
                      },
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 136,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 138,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 140,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 10,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 134,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Route {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "component": <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />,
                        "path": "/rewards/referral-details/vallon",
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        props={
                          Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": [Circular],
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 136,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 138,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 140,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": null,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": null,
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": Object {
                    "expirationTime": 0,
                    "firstContext": Object {
                      "context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                      "next": null,
                      "observedBits": 1073741823,
                    },
                    "responders": null,
                  },
                  "effectTag": 1,
                  "elementType": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 9,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.context),
                    "_calculateChangedBits": null,
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": [Circular],
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 5,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "component": <ReferralDetailsView
                    data={Object {}}
                    isAuthenticated={true}
                    mockData={
                      Object {
                        "additionData": Object {
                          "feesValue": "$0.25",
                          "offersPercent": 5,
                          "offersReward": 5,
                        },
                        "campaignPercent": "50%",
                        "firstPercent": "50%",
                        "indexPercent": "30%",
                        "referralDuration": 90,
                        "referralsPercent": "20%",
                        "secondPercent": "40%",
                        "suspendedTimer": 30,
                        "username": "vallon",
                      }
                    }
                  />,
                  "path": "/rewards/referral-details/vallon",
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 134,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": Object {
                        "isExact": true,
                        "params": Object {},
                        "path": "/",
                        "url": "/",
                      },
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Route {
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "refs": Object {},
                  "state": null,
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": null,
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": <Route
                  component={
                    <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />
                  }
                  path="/rewards/referral-details/vallon"
                />,
                "intl": Object {
                  "defaultFormats": Object {},
                  "defaultLocale": "en",
                  "formatDate": [Function],
                  "formatHTMLMessage": [Function],
                  "formatMessage": [Function],
                  "formatNumber": [Function],
                  "formatPlural": [Function],
                  "formatRelative": [Function],
                  "formatTime": [Function],
                  "formats": Object {},
                  "formatters": Object {
                    "getDateTimeFormat": [Function],
                    "getMessageFormat": [Function],
                    "getNumberFormat": [Function],
                    "getPluralFormat": [Function],
                    "getRelativeFormat": [Function],
                  },
                  "locale": "en",
                  "messages": Object {},
                  "now": [Function],
                  "onError": [Function],
                  "textComponent": "span",
                  "timeZone": null,
                },
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 128,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 1,
                "elementType": [Function],
                "expirationTime": 0,
                "firstEffect": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 136,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 138,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 140,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": null,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": null,
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": Object {
                      "expirationTime": 0,
                      "firstContext": Object {
                        "context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                        "next": null,
                        "observedBits": 1073741823,
                      },
                      "responders": null,
                    },
                    "effectTag": 1,
                    "elementType": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 9,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": [Circular],
                        "Provider": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": [Circular],
                        },
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "component": <ReferralDetailsView
                      data={Object {}}
                      isAuthenticated={true}
                      mockData={
                        Object {
                          "additionData": Object {
                            "feesValue": "$0.25",
                            "offersPercent": 5,
                            "offersReward": 5,
                          },
                          "campaignPercent": "50%",
                          "firstPercent": "50%",
                          "indexPercent": "30%",
                          "referralDuration": 90,
                          "referralsPercent": "20%",
                          "secondPercent": "40%",
                          "suspendedTimer": 30,
                          "username": "vallon",
                        }
                      }
                    />,
                    "path": "/rewards/referral-details/vallon",
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 134,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": [Circular],
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "value": Object {
                        "history": Object {
                          "action": "POP",
                          "block": [Function],
                          "createHref": [Function],
                          "go": [Function],
                          "goBack": [Function],
                          "goForward": [Function],
                          "length": 1,
                          "listen": [Function],
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "push": [Function],
                          "replace": [Function],
                        },
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "match": Object {
                          "isExact": true,
                          "params": Object {},
                          "path": "/",
                          "url": "/",
                        },
                        "staticContext": undefined,
                      },
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": null,
                    "tag": 10,
                    "treeBaseDuration": 0,
                    "type": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": Object {
                        "$$typeof": Symbol(react.context),
                        "Consumer": Object {
                          "$$typeof": Symbol(react.context),
                          "_calculateChangedBits": null,
                          "_context": [Circular],
                        },
                        "Provider": [Circular],
                        "_calculateChangedBits": null,
                        "_currentRenderer": Object {},
                        "_currentRenderer2": null,
                        "_currentValue": undefined,
                        "_currentValue2": undefined,
                        "_threadCount": 0,
                        "displayName": "Router",
                      },
                    },
                    "updateQueue": null,
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Route {
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "refs": Object {},
                    "state": null,
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": null,
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "memoizedState": Object {
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "mount": true,
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "wrappingComponentProps": null,
                },
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "Component": [Function],
                  "context": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "props": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "refProp": null,
                  "wrappingComponentProps": null,
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 125,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": null,
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 125,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": [Circular],
                    "child": null,
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 0,
                    "elementType": null,
                    "expirationTime": 1073741823,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": null,
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": null,
                    "ref": null,
                    "return": null,
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": FiberRootNode {
                      "callbackExpirationTime": 0,
                      "callbackNode": null,
                      "callbackPriority": 90,
                      "containerInfo": <div />,
                      "context": Object {},
                      "current": [Circular],
                      "finishedExpirationTime": 0,
                      "finishedWork": null,
                      "firstPendingTime": 0,
                      "firstSuspendedTime": 0,
                      "hydrate": false,
                      "interactionThreadID": 17,
                      "lastExpiredTime": 0,
                      "lastPingedTime": 0,
                      "lastSuspendedTime": 0,
                      "memoizedInteractions": Set {},
                      "nextKnownPendingLevel": 0,
                      "pendingChildren": null,
                      "pendingContext": null,
                      "pendingInteractionMap": Map {},
                      "pingCache": null,
                      "tag": 0,
                      "timeoutHandle": -1,
                    },
                    "tag": 3,
                    "treeBaseDuration": 0,
                    "type": null,
                    "updateQueue": Object {
                      "baseQueue": Object {
                        "callback": null,
                        "expirationTime": 1073741823,
                        "next": [Circular],
                        "payload": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "priority": 97,
                        "suspenseConfig": null,
                        "tag": 0,
                      },
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": null,
                  "expirationTime": 0,
                  "firstEffect": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 136,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": null,
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 138,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 140,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": [Circular],
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "expirationTime": 0,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": null,
                          "value": Object {
                            "history": Object {
                              "action": "POP",
                              "block": [Function],
                              "createHref": [Function],
                              "go": [Function],
                              "goBack": [Function],
                              "goForward": [Function],
                              "length": 1,
                              "listen": [Function],
                              "location": Object {
                                "hash": "",
                                "pathname": "/",
                                "search": "",
                                "state": undefined,
                              },
                              "push": [Function],
                              "replace": [Function],
                            },
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "match": null,
                            "staticContext": undefined,
                          },
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": null,
                        "tag": 10,
                        "treeBaseDuration": 0,
                        "type": Object {
                          "$$typeof": Symbol(react.provider),
                          "_context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": [Circular],
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                        },
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "dependencies": Object {
                        "expirationTime": 0,
                        "firstContext": Object {
                          "context": Object {
                            "$$typeof": Symbol(react.context),
                            "Consumer": Object {
                              "$$typeof": Symbol(react.context),
                              "_calculateChangedBits": null,
                              "_context": [Circular],
                            },
                            "Provider": Object {
                              "$$typeof": Symbol(react.provider),
                              "_context": [Circular],
                            },
                            "_calculateChangedBits": null,
                            "_currentRenderer": Object {},
                            "_currentRenderer2": null,
                            "_currentValue": undefined,
                            "_currentValue2": undefined,
                            "_threadCount": 0,
                            "displayName": "Router",
                          },
                          "next": null,
                          "observedBits": 1073741823,
                        },
                        "responders": null,
                      },
                      "effectTag": 1,
                      "elementType": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 9,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": [Circular],
                          "Provider": Object {
                            "$$typeof": Symbol(react.provider),
                            "_context": [Circular],
                          },
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "component": <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />,
                      "path": "/rewards/referral-details/vallon",
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 134,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": [Circular],
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 0,
                      "elementType": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "value": Object {
                          "history": Object {
                            "action": "POP",
                            "block": [Function],
                            "createHref": [Function],
                            "go": [Function],
                            "goBack": [Function],
                            "goForward": [Function],
                            "length": 1,
                            "listen": [Function],
                            "location": Object {
                              "hash": "",
                              "pathname": "/",
                              "search": "",
                              "state": undefined,
                            },
                            "push": [Function],
                            "replace": [Function],
                          },
                          "location": Object {
                            "hash": "",
                            "pathname": "/",
                            "search": "",
                            "state": undefined,
                          },
                          "match": Object {
                            "isExact": true,
                            "params": Object {},
                            "path": "/",
                            "url": "/",
                          },
                          "staticContext": undefined,
                        },
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": null,
                      "tag": 10,
                      "treeBaseDuration": 0,
                      "type": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": Object {
                          "$$typeof": Symbol(react.context),
                          "Consumer": Object {
                            "$$typeof": Symbol(react.context),
                            "_calculateChangedBits": null,
                            "_context": [Circular],
                          },
                          "Provider": [Circular],
                          "_calculateChangedBits": null,
                          "_currentRenderer": Object {},
                          "_currentRenderer2": null,
                          "_currentValue": undefined,
                          "_currentValue2": undefined,
                          "_threadCount": 0,
                          "displayName": "Router",
                        },
                      },
                      "updateQueue": null,
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": Route {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "props": Object {
                        "component": <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />,
                        "path": "/rewards/referral-details/vallon",
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": null,
                  "memoizedState": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={
                        Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      props={
                        Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        }
                      }
                      refProp={null}
                      wrappingComponentProps={null}
                    />,
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": null,
                  "ref": null,
                  "return": null,
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": FiberRootNode {
                    "callbackExpirationTime": 0,
                    "callbackNode": null,
                    "callbackPriority": 90,
                    "containerInfo": <div />,
                    "context": Object {},
                    "current": [Circular],
                    "finishedExpirationTime": 0,
                    "finishedWork": null,
                    "firstPendingTime": 0,
                    "firstSuspendedTime": 0,
                    "hydrate": false,
                    "interactionThreadID": 17,
                    "lastExpiredTime": 0,
                    "lastPingedTime": 0,
                    "lastSuspendedTime": 0,
                    "memoizedInteractions": Set {},
                    "nextKnownPendingLevel": 0,
                    "pendingChildren": null,
                    "pendingContext": null,
                    "pendingInteractionMap": Map {},
                    "pingCache": null,
                    "tag": 0,
                    "timeoutHandle": -1,
                  },
                  "tag": 3,
                  "treeBaseDuration": 0,
                  "type": null,
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={
                          Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        props={
                          Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          }
                        }
                        refProp={null}
                        wrappingComponentProps={null}
                      />,
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": WrapperComponent {
                  "__reactInternalMemoizedMergedChildContext": Object {
                    "intl": Object {
                      "defaultFormats": Object {},
                      "defaultLocale": "en",
                      "formatDate": [Function],
                      "formatHTMLMessage": [Function],
                      "formatMessage": [Function],
                      "formatNumber": [Function],
                      "formatPlural": [Function],
                      "formatRelative": [Function],
                      "formatTime": [Function],
                      "formats": Object {},
                      "formatters": Object {
                        "getDateTimeFormat": [Function],
                        "getMessageFormat": [Function],
                        "getNumberFormat": [Function],
                        "getPluralFormat": [Function],
                        "getRelativeFormat": [Function],
                      },
                      "locale": "en",
                      "messages": Object {},
                      "now": [Function],
                      "onError": [Function],
                      "textComponent": "span",
                      "timeZone": null,
                    },
                  },
                  "_reactInternalFiber": [Circular],
                  "_reactInternalInstance": Object {},
                  "context": Object {},
                  "props": Object {
                    "Component": [Function],
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "refProp": null,
                    "wrappingComponentProps": null,
                  },
                  "refs": Object {},
                  "state": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "updater": Object {
                    "enqueueForceUpdate": [Function],
                    "enqueueReplaceState": [Function],
                    "enqueueSetState": [Function],
                    "isMounted": [Function],
                  },
                },
                "tag": 1,
                "treeBaseDuration": 0,
                "type": [Function],
                "updateQueue": Object {
                  "baseQueue": null,
                  "baseState": Object {
                    "context": Object {
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "mount": true,
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "wrappingComponentProps": null,
                  },
                  "effects": null,
                  "shared": Object {
                    "pending": null,
                  },
                },
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": BrowserRouter {
                "_reactInternalFiber": [Circular],
                "_reactInternalInstance": Object {},
                "context": Object {},
                "history": Object {
                  "action": "POP",
                  "block": [Function],
                  "createHref": [Function],
                  "go": [Function],
                  "goBack": [Function],
                  "goForward": [Function],
                  "length": 1,
                  "listen": [Function],
                  "location": Object {
                    "hash": "",
                    "pathname": "/",
                    "search": "",
                    "state": undefined,
                  },
                  "push": [Function],
                  "replace": [Function],
                },
                "props": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "intl": Object {
                    "defaultFormats": Object {},
                    "defaultLocale": "en",
                    "formatDate": [Function],
                    "formatHTMLMessage": [Function],
                    "formatMessage": [Function],
                    "formatNumber": [Function],
                    "formatPlural": [Function],
                    "formatRelative": [Function],
                    "formatTime": [Function],
                    "formats": Object {},
                    "formatters": Object {
                      "getDateTimeFormat": [Function],
                      "getMessageFormat": [Function],
                      "getNumberFormat": [Function],
                      "getPluralFormat": [Function],
                      "getRelativeFormat": [Function],
                    },
                    "locale": "en",
                    "messages": Object {},
                    "now": [Function],
                    "onError": [Function],
                    "textComponent": "span",
                    "timeZone": null,
                  },
                },
                "refs": Object {},
                "state": null,
                "updater": Object {
                  "enqueueForceUpdate": [Function],
                  "enqueueReplaceState": [Function],
                  "enqueueSetState": [Function],
                  "isMounted": [Function],
                },
              },
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": [Circular],
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": Object {
              "baseQueue": null,
              "baseState": Object {
                "location": Object {
                  "hash": "",
                  "pathname": "/",
                  "search": "",
                  "state": undefined,
                },
              },
              "effects": null,
              "shared": Object {
                "pending": null,
              },
            },
          },
          "_reactInternalInstance": Object {},
          "context": Object {},
          "props": Object {
            "children": <Route
              component={
                <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />
              }
              path="/rewards/referral-details/vallon"
            />,
            "history": Object {
              "action": "POP",
              "block": [Function],
              "createHref": [Function],
              "go": [Function],
              "goBack": [Function],
              "goForward": [Function],
              "length": 1,
              "listen": [Function],
              "location": Object {
                "hash": "",
                "pathname": "/",
                "search": "",
                "state": undefined,
              },
              "push": [Function],
              "replace": [Function],
            },
          },
          "refs": Object {},
          "state": Object {
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
          },
          "unlisten": [Function],
          "updater": Object {
            "enqueueForceUpdate": [Function],
            "enqueueReplaceState": [Function],
            "enqueueSetState": [Function],
            "isMounted": [Function],
          },
        },
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Route
            component={
              <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />
            }
            path="/rewards/referral-details/vallon"
          />,
          "history": Object {
            "action": "POP",
            "block": [Function],
            "createHref": [Function],
            "go": [Function],
            "goBack": [Function],
            "goForward": [Function],
            "length": 1,
            "listen": [Function],
            "location": Object {
              "hash": "",
              "pathname": "/",
              "search": "",
              "state": undefined,
            },
            "push": [Function],
            "replace": [Function],
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": Route {
            "_reactInternalFiber": FiberNode {
              "_debugHookTypes": null,
              "_debugID": 136,
              "_debugIsCurrentlyTiming": false,
              "_debugNeedsRemount": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 138,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": [Circular],
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 140,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": [Circular],
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 0,
                  "elementType": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "expirationTime": 0,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": null,
                    "value": Object {
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "match": null,
                      "staticContext": undefined,
                    },
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": null,
                  "tag": 10,
                  "treeBaseDuration": 0,
                  "type": Object {
                    "$$typeof": Symbol(react.provider),
                    "_context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": [Circular],
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                  },
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "dependencies": Object {
                  "expirationTime": 0,
                  "firstContext": Object {
                    "context": Object {
                      "$$typeof": Symbol(react.context),
                      "Consumer": Object {
                        "$$typeof": Symbol(react.context),
                        "_calculateChangedBits": null,
                        "_context": [Circular],
                      },
                      "Provider": Object {
                        "$$typeof": Symbol(react.provider),
                        "_context": [Circular],
                      },
                      "_calculateChangedBits": null,
                      "_currentRenderer": Object {},
                      "_currentRenderer2": null,
                      "_currentValue": undefined,
                      "_currentValue2": undefined,
                      "_threadCount": 0,
                      "displayName": "Router",
                    },
                    "next": null,
                    "observedBits": 1073741823,
                  },
                  "responders": null,
                },
                "effectTag": 1,
                "elementType": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 9,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.context),
                  "_calculateChangedBits": null,
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": [Circular],
                    "Provider": Object {
                      "$$typeof": Symbol(react.provider),
                      "_context": [Circular],
                    },
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "dependencies": null,
              "effectTag": 5,
              "elementType": [Function],
              "expirationTime": 0,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "component": <ReferralDetailsView
                  data={Object {}}
                  isAuthenticated={true}
                  mockData={
                    Object {
                      "additionData": Object {
                        "feesValue": "$0.25",
                        "offersPercent": 5,
                        "offersReward": 5,
                      },
                      "campaignPercent": "50%",
                      "firstPercent": "50%",
                      "indexPercent": "30%",
                      "referralDuration": 90,
                      "referralsPercent": "20%",
                      "secondPercent": "40%",
                      "suspendedTimer": 30,
                      "username": "vallon",
                    }
                  }
                />,
                "path": "/rewards/referral-details/vallon",
              },
              "ref": null,
              "return": FiberNode {
                "_debugHookTypes": null,
                "_debugID": 134,
                "_debugIsCurrentlyTiming": false,
                "_debugNeedsRemount": false,
                "_debugOwner": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 130,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": BrowserRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 130,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": BrowserRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": [Circular],
                "childExpirationTime": 0,
                "dependencies": null,
                "effectTag": 0,
                "elementType": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "expirationTime": 0,
                "firstEffect": [Circular],
                "index": 0,
                "key": null,
                "lastEffect": [Circular],
                "memoizedProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": <Route
                    component={
                      <ReferralDetailsView
                        data={Object {}}
                        isAuthenticated={true}
                        mockData={
                          Object {
                            "additionData": Object {
                              "feesValue": "$0.25",
                              "offersPercent": 5,
                              "offersReward": 5,
                            },
                            "campaignPercent": "50%",
                            "firstPercent": "50%",
                            "indexPercent": "30%",
                            "referralDuration": 90,
                            "referralsPercent": "20%",
                            "secondPercent": "40%",
                            "suspendedTimer": 30,
                            "username": "vallon",
                          }
                        }
                      />
                    }
                    path="/rewards/referral-details/vallon"
                  />,
                  "value": Object {
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                    "match": Object {
                      "isExact": true,
                      "params": Object {},
                      "path": "/",
                      "url": "/",
                    },
                    "staticContext": undefined,
                  },
                },
                "ref": null,
                "return": FiberNode {
                  "_debugHookTypes": null,
                  "_debugID": 132,
                  "_debugIsCurrentlyTiming": false,
                  "_debugNeedsRemount": false,
                  "_debugOwner": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 130,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": BrowserRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "_debugSource": null,
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": [Circular],
                  "childExpirationTime": 0,
                  "dependencies": null,
                  "effectTag": 5,
                  "elementType": [Function],
                  "expirationTime": 0,
                  "firstEffect": [Circular],
                  "index": 0,
                  "key": null,
                  "lastEffect": [Circular],
                  "memoizedProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "memoizedState": Object {
                    "location": Object {
                      "hash": "",
                      "pathname": "/",
                      "search": "",
                      "state": undefined,
                    },
                  },
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": <Route
                      component={
                        <ReferralDetailsView
                          data={Object {}}
                          isAuthenticated={true}
                          mockData={
                            Object {
                              "additionData": Object {
                                "feesValue": "$0.25",
                                "offersPercent": 5,
                                "offersReward": 5,
                              },
                              "campaignPercent": "50%",
                              "firstPercent": "50%",
                              "indexPercent": "30%",
                              "referralDuration": 90,
                              "referralsPercent": "20%",
                              "secondPercent": "40%",
                              "suspendedTimer": 30,
                              "username": "vallon",
                            }
                          }
                        />
                      }
                      path="/rewards/referral-details/vallon"
                    />,
                    "history": Object {
                      "action": "POP",
                      "block": [Function],
                      "createHref": [Function],
                      "go": [Function],
                      "goBack": [Function],
                      "goForward": [Function],
                      "length": 1,
                      "listen": [Function],
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                      "push": [Function],
                      "replace": [Function],
                    },
                  },
                  "ref": null,
                  "return": FiberNode {
                    "_debugHookTypes": null,
                    "_debugID": 130,
                    "_debugIsCurrentlyTiming": false,
                    "_debugNeedsRemount": false,
                    "_debugOwner": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "_debugSource": null,
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": [Circular],
                    "childExpirationTime": 0,
                    "dependencies": null,
                    "effectTag": 5,
                    "elementType": [Function],
                    "expirationTime": 0,
                    "firstEffect": [Circular],
                    "index": 0,
                    "key": null,
                    "lastEffect": [Circular],
                    "memoizedProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "intl": Object {
                        "defaultFormats": Object {},
                        "defaultLocale": "en",
                        "formatDate": [Function],
                        "formatHTMLMessage": [Function],
                        "formatMessage": [Function],
                        "formatNumber": [Function],
                        "formatPlural": [Function],
                        "formatRelative": [Function],
                        "formatTime": [Function],
                        "formats": Object {},
                        "formatters": Object {
                          "getDateTimeFormat": [Function],
                          "getMessageFormat": [Function],
                          "getNumberFormat": [Function],
                          "getPluralFormat": [Function],
                          "getRelativeFormat": [Function],
                        },
                        "locale": "en",
                        "messages": Object {},
                        "now": [Function],
                        "onError": [Function],
                        "textComponent": "span",
                        "timeZone": null,
                      },
                    },
                    "ref": null,
                    "return": FiberNode {
                      "_debugHookTypes": null,
                      "_debugID": 128,
                      "_debugIsCurrentlyTiming": false,
                      "_debugNeedsRemount": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": [Circular],
                      "childExpirationTime": 0,
                      "dependencies": null,
                      "effectTag": 1,
                      "elementType": [Function],
                      "expirationTime": 0,
                      "firstEffect": [Circular],
                      "index": 0,
                      "key": null,
                      "lastEffect": [Circular],
                      "memoizedProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "memoizedState": Object {
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "mount": true,
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "wrappingComponentProps": null,
                      },
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "Component": [Function],
                        "context": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "props": Object {
                          "children": <Route
                            component={
                              <ReferralDetailsView
                                data={Object {}}
                                isAuthenticated={true}
                                mockData={
                                  Object {
                                    "additionData": Object {
                                      "feesValue": "$0.25",
                                      "offersPercent": 5,
                                      "offersReward": 5,
                                    },
                                    "campaignPercent": "50%",
                                    "firstPercent": "50%",
                                    "indexPercent": "30%",
                                    "referralDuration": 90,
                                    "referralsPercent": "20%",
                                    "secondPercent": "40%",
                                    "suspendedTimer": 30,
                                    "username": "vallon",
                                  }
                                }
                              />
                            }
                            path="/rewards/referral-details/vallon"
                          />,
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "refProp": null,
                        "wrappingComponentProps": null,
                      },
                      "ref": null,
                      "return": FiberNode {
                        "_debugHookTypes": null,
                        "_debugID": 125,
                        "_debugIsCurrentlyTiming": false,
                        "_debugNeedsRemount": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": FiberNode {
                          "_debugHookTypes": null,
                          "_debugID": 125,
                          "_debugIsCurrentlyTiming": false,
                          "_debugNeedsRemount": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": [Circular],
                          "child": null,
                          "childExpirationTime": 0,
                          "dependencies": null,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 1073741823,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": null,
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": null,
                          "ref": null,
                          "return": null,
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": FiberRootNode {
                            "callbackExpirationTime": 0,
                            "callbackNode": null,
                            "callbackPriority": 90,
                            "containerInfo": <div />,
                            "context": Object {},
                            "current": [Circular],
                            "finishedExpirationTime": 0,
                            "finishedWork": null,
                            "firstPendingTime": 0,
                            "firstSuspendedTime": 0,
                            "hydrate": false,
                            "interactionThreadID": 17,
                            "lastExpiredTime": 0,
                            "lastPingedTime": 0,
                            "lastSuspendedTime": 0,
                            "memoizedInteractions": Set {},
                            "nextKnownPendingLevel": 0,
                            "pendingChildren": null,
                            "pendingContext": null,
                            "pendingInteractionMap": Map {},
                            "pingCache": null,
                            "tag": 0,
                            "timeoutHandle": -1,
                          },
                          "tag": 3,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": Object {
                            "baseQueue": Object {
                              "callback": null,
                              "expirationTime": 1073741823,
                              "next": [Circular],
                              "payload": Object {
                                "element": <WrapperComponent
                                  Component={[Function]}
                                  context={
                                    Object {
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  props={
                                    Object {
                                      "children": <Route
                                        component={
                                          <ReferralDetailsView
                                            data={Object {}}
                                            isAuthenticated={true}
                                            mockData={
                                              Object {
                                                "additionData": Object {
                                                  "feesValue": "$0.25",
                                                  "offersPercent": 5,
                                                  "offersReward": 5,
                                                },
                                                "campaignPercent": "50%",
                                                "firstPercent": "50%",
                                                "indexPercent": "30%",
                                                "referralDuration": 90,
                                                "referralsPercent": "20%",
                                                "secondPercent": "40%",
                                                "suspendedTimer": 30,
                                                "username": "vallon",
                                              }
                                            }
                                          />
                                        }
                                        path="/rewards/referral-details/vallon"
                                      />,
                                      "intl": Object {
                                        "defaultFormats": Object {},
                                        "defaultLocale": "en",
                                        "formatDate": [Function],
                                        "formatHTMLMessage": [Function],
                                        "formatMessage": [Function],
                                        "formatNumber": [Function],
                                        "formatPlural": [Function],
                                        "formatRelative": [Function],
                                        "formatTime": [Function],
                                        "formats": Object {},
                                        "formatters": Object {
                                          "getDateTimeFormat": [Function],
                                          "getMessageFormat": [Function],
                                          "getNumberFormat": [Function],
                                          "getPluralFormat": [Function],
                                          "getRelativeFormat": [Function],
                                        },
                                        "locale": "en",
                                        "messages": Object {},
                                        "now": [Function],
                                        "onError": [Function],
                                        "textComponent": "span",
                                        "timeZone": null,
                                      },
                                    }
                                  }
                                  refProp={null}
                                  wrappingComponentProps={null}
                                />,
                              },
                              "priority": 97,
                              "suspenseConfig": null,
                              "tag": 0,
                            },
                            "baseState": null,
                            "effects": null,
                            "shared": Object {
                              "pending": null,
                            },
                          },
                        },
                        "child": [Circular],
                        "childExpirationTime": 0,
                        "dependencies": null,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstEffect": [Circular],
                        "index": 0,
                        "key": null,
                        "lastEffect": [Circular],
                        "memoizedProps": null,
                        "memoizedState": Object {
                          "element": <WrapperComponent
                            Component={[Function]}
                            context={
                              Object {
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            props={
                              Object {
                                "children": <Route
                                  component={
                                    <ReferralDetailsView
                                      data={Object {}}
                                      isAuthenticated={true}
                                      mockData={
                                        Object {
                                          "additionData": Object {
                                            "feesValue": "$0.25",
                                            "offersPercent": 5,
                                            "offersReward": 5,
                                          },
                                          "campaignPercent": "50%",
                                          "firstPercent": "50%",
                                          "indexPercent": "30%",
                                          "referralDuration": 90,
                                          "referralsPercent": "20%",
                                          "secondPercent": "40%",
                                          "suspendedTimer": 30,
                                          "username": "vallon",
                                        }
                                      }
                                    />
                                  }
                                  path="/rewards/referral-details/vallon"
                                />,
                                "intl": Object {
                                  "defaultFormats": Object {},
                                  "defaultLocale": "en",
                                  "formatDate": [Function],
                                  "formatHTMLMessage": [Function],
                                  "formatMessage": [Function],
                                  "formatNumber": [Function],
                                  "formatPlural": [Function],
                                  "formatRelative": [Function],
                                  "formatTime": [Function],
                                  "formats": Object {},
                                  "formatters": Object {
                                    "getDateTimeFormat": [Function],
                                    "getMessageFormat": [Function],
                                    "getNumberFormat": [Function],
                                    "getPluralFormat": [Function],
                                    "getRelativeFormat": [Function],
                                  },
                                  "locale": "en",
                                  "messages": Object {},
                                  "now": [Function],
                                  "onError": [Function],
                                  "textComponent": "span",
                                  "timeZone": null,
                                },
                              }
                            }
                            refProp={null}
                            wrappingComponentProps={null}
                          />,
                        },
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": null,
                        "ref": null,
                        "return": null,
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": FiberRootNode {
                          "callbackExpirationTime": 0,
                          "callbackNode": null,
                          "callbackPriority": 90,
                          "containerInfo": <div />,
                          "context": Object {},
                          "current": [Circular],
                          "finishedExpirationTime": 0,
                          "finishedWork": null,
                          "firstPendingTime": 0,
                          "firstSuspendedTime": 0,
                          "hydrate": false,
                          "interactionThreadID": 17,
                          "lastExpiredTime": 0,
                          "lastPingedTime": 0,
                          "lastSuspendedTime": 0,
                          "memoizedInteractions": Set {},
                          "nextKnownPendingLevel": 0,
                          "pendingChildren": null,
                          "pendingContext": null,
                          "pendingInteractionMap": Map {},
                          "pingCache": null,
                          "tag": 0,
                          "timeoutHandle": -1,
                        },
                        "tag": 3,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": Object {
                          "baseQueue": null,
                          "baseState": Object {
                            "element": <WrapperComponent
                              Component={[Function]}
                              context={
                                Object {
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              props={
                                Object {
                                  "children": <Route
                                    component={
                                      <ReferralDetailsView
                                        data={Object {}}
                                        isAuthenticated={true}
                                        mockData={
                                          Object {
                                            "additionData": Object {
                                              "feesValue": "$0.25",
                                              "offersPercent": 5,
                                              "offersReward": 5,
                                            },
                                            "campaignPercent": "50%",
                                            "firstPercent": "50%",
                                            "indexPercent": "30%",
                                            "referralDuration": 90,
                                            "referralsPercent": "20%",
                                            "secondPercent": "40%",
                                            "suspendedTimer": 30,
                                            "username": "vallon",
                                          }
                                        }
                                      />
                                    }
                                    path="/rewards/referral-details/vallon"
                                  />,
                                  "intl": Object {
                                    "defaultFormats": Object {},
                                    "defaultLocale": "en",
                                    "formatDate": [Function],
                                    "formatHTMLMessage": [Function],
                                    "formatMessage": [Function],
                                    "formatNumber": [Function],
                                    "formatPlural": [Function],
                                    "formatRelative": [Function],
                                    "formatTime": [Function],
                                    "formats": Object {},
                                    "formatters": Object {
                                      "getDateTimeFormat": [Function],
                                      "getMessageFormat": [Function],
                                      "getNumberFormat": [Function],
                                      "getPluralFormat": [Function],
                                      "getRelativeFormat": [Function],
                                    },
                                    "locale": "en",
                                    "messages": Object {},
                                    "now": [Function],
                                    "onError": [Function],
                                    "textComponent": "span",
                                    "timeZone": null,
                                  },
                                }
                              }
                              refProp={null}
                              wrappingComponentProps={null}
                            />,
                          },
                          "effects": null,
                          "shared": Object {
                            "pending": null,
                          },
                        },
                      },
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": WrapperComponent {
                        "__reactInternalMemoizedMergedChildContext": Object {
                          "intl": Object {
                            "defaultFormats": Object {},
                            "defaultLocale": "en",
                            "formatDate": [Function],
                            "formatHTMLMessage": [Function],
                            "formatMessage": [Function],
                            "formatNumber": [Function],
                            "formatPlural": [Function],
                            "formatRelative": [Function],
                            "formatTime": [Function],
                            "formats": Object {},
                            "formatters": Object {
                              "getDateTimeFormat": [Function],
                              "getMessageFormat": [Function],
                              "getNumberFormat": [Function],
                              "getPluralFormat": [Function],
                              "getRelativeFormat": [Function],
                            },
                            "locale": "en",
                            "messages": Object {},
                            "now": [Function],
                            "onError": [Function],
                            "textComponent": "span",
                            "timeZone": null,
                          },
                        },
                        "_reactInternalFiber": [Circular],
                        "_reactInternalInstance": Object {},
                        "context": Object {},
                        "props": Object {
                          "Component": [Function],
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "refProp": null,
                          "wrappingComponentProps": null,
                        },
                        "refs": Object {},
                        "state": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "updater": Object {
                          "enqueueForceUpdate": [Function],
                          "enqueueReplaceState": [Function],
                          "enqueueSetState": [Function],
                          "isMounted": [Function],
                        },
                      },
                      "tag": 1,
                      "treeBaseDuration": 0,
                      "type": [Function],
                      "updateQueue": Object {
                        "baseQueue": null,
                        "baseState": Object {
                          "context": Object {
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "mount": true,
                          "props": Object {
                            "children": <Route
                              component={
                                <ReferralDetailsView
                                  data={Object {}}
                                  isAuthenticated={true}
                                  mockData={
                                    Object {
                                      "additionData": Object {
                                        "feesValue": "$0.25",
                                        "offersPercent": 5,
                                        "offersReward": 5,
                                      },
                                      "campaignPercent": "50%",
                                      "firstPercent": "50%",
                                      "indexPercent": "30%",
                                      "referralDuration": 90,
                                      "referralsPercent": "20%",
                                      "secondPercent": "40%",
                                      "suspendedTimer": 30,
                                      "username": "vallon",
                                    }
                                  }
                                />
                              }
                              path="/rewards/referral-details/vallon"
                            />,
                            "intl": Object {
                              "defaultFormats": Object {},
                              "defaultLocale": "en",
                              "formatDate": [Function],
                              "formatHTMLMessage": [Function],
                              "formatMessage": [Function],
                              "formatNumber": [Function],
                              "formatPlural": [Function],
                              "formatRelative": [Function],
                              "formatTime": [Function],
                              "formats": Object {},
                              "formatters": Object {
                                "getDateTimeFormat": [Function],
                                "getMessageFormat": [Function],
                                "getNumberFormat": [Function],
                                "getPluralFormat": [Function],
                                "getRelativeFormat": [Function],
                              },
                              "locale": "en",
                              "messages": Object {},
                              "now": [Function],
                              "onError": [Function],
                              "textComponent": "span",
                              "timeZone": null,
                            },
                          },
                          "wrappingComponentProps": null,
                        },
                        "effects": null,
                        "shared": Object {
                          "pending": null,
                        },
                      },
                    },
                    "selfBaseDuration": 0,
                    "sibling": null,
                    "stateNode": BrowserRouter {
                      "_reactInternalFiber": [Circular],
                      "_reactInternalInstance": Object {},
                      "context": Object {},
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                      "props": Object {
                        "children": <Route
                          component={
                            <ReferralDetailsView
                              data={Object {}}
                              isAuthenticated={true}
                              mockData={
                                Object {
                                  "additionData": Object {
                                    "feesValue": "$0.25",
                                    "offersPercent": 5,
                                    "offersReward": 5,
                                  },
                                  "campaignPercent": "50%",
                                  "firstPercent": "50%",
                                  "indexPercent": "30%",
                                  "referralDuration": 90,
                                  "referralsPercent": "20%",
                                  "secondPercent": "40%",
                                  "suspendedTimer": 30,
                                  "username": "vallon",
                                }
                              }
                            />
                          }
                          path="/rewards/referral-details/vallon"
                        />,
                        "intl": Object {
                          "defaultFormats": Object {},
                          "defaultLocale": "en",
                          "formatDate": [Function],
                          "formatHTMLMessage": [Function],
                          "formatMessage": [Function],
                          "formatNumber": [Function],
                          "formatPlural": [Function],
                          "formatRelative": [Function],
                          "formatTime": [Function],
                          "formats": Object {},
                          "formatters": Object {
                            "getDateTimeFormat": [Function],
                            "getMessageFormat": [Function],
                            "getNumberFormat": [Function],
                            "getPluralFormat": [Function],
                            "getRelativeFormat": [Function],
                          },
                          "locale": "en",
                          "messages": Object {},
                          "now": [Function],
                          "onError": [Function],
                          "textComponent": "span",
                          "timeZone": null,
                        },
                      },
                      "refs": Object {},
                      "state": null,
                      "updater": Object {
                        "enqueueForceUpdate": [Function],
                        "enqueueReplaceState": [Function],
                        "enqueueSetState": [Function],
                        "isMounted": [Function],
                      },
                    },
                    "tag": 1,
                    "treeBaseDuration": 0,
                    "type": [Function],
                    "updateQueue": Object {
                      "baseQueue": null,
                      "baseState": null,
                      "effects": null,
                      "shared": Object {
                        "pending": null,
                      },
                    },
                  },
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": Router {
                    "_isMounted": true,
                    "_pendingLocation": null,
                    "_reactInternalFiber": [Circular],
                    "_reactInternalInstance": Object {},
                    "context": Object {},
                    "props": Object {
                      "children": <Route
                        component={
                          <ReferralDetailsView
                            data={Object {}}
                            isAuthenticated={true}
                            mockData={
                              Object {
                                "additionData": Object {
                                  "feesValue": "$0.25",
                                  "offersPercent": 5,
                                  "offersReward": 5,
                                },
                                "campaignPercent": "50%",
                                "firstPercent": "50%",
                                "indexPercent": "30%",
                                "referralDuration": 90,
                                "referralsPercent": "20%",
                                "secondPercent": "40%",
                                "suspendedTimer": 30,
                                "username": "vallon",
                              }
                            }
                          />
                        }
                        path="/rewards/referral-details/vallon"
                      />,
                      "history": Object {
                        "action": "POP",
                        "block": [Function],
                        "createHref": [Function],
                        "go": [Function],
                        "goBack": [Function],
                        "goForward": [Function],
                        "length": 1,
                        "listen": [Function],
                        "location": Object {
                          "hash": "",
                          "pathname": "/",
                          "search": "",
                          "state": undefined,
                        },
                        "push": [Function],
                        "replace": [Function],
                      },
                    },
                    "refs": Object {},
                    "state": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "unlisten": [Function],
                    "updater": Object {
                      "enqueueForceUpdate": [Function],
                      "enqueueReplaceState": [Function],
                      "enqueueSetState": [Function],
                      "isMounted": [Function],
                    },
                  },
                  "tag": 1,
                  "treeBaseDuration": 0,
                  "type": [Function],
                  "updateQueue": Object {
                    "baseQueue": null,
                    "baseState": Object {
                      "location": Object {
                        "hash": "",
                        "pathname": "/",
                        "search": "",
                        "state": undefined,
                      },
                    },
                    "effects": null,
                    "shared": Object {
                      "pending": null,
                    },
                  },
                },
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": null,
                "tag": 10,
                "treeBaseDuration": 0,
                "type": Object {
                  "$$typeof": Symbol(react.provider),
                  "_context": Object {
                    "$$typeof": Symbol(react.context),
                    "Consumer": Object {
                      "$$typeof": Symbol(react.context),
                      "_calculateChangedBits": null,
                      "_context": [Circular],
                    },
                    "Provider": [Circular],
                    "_calculateChangedBits": null,
                    "_currentRenderer": Object {},
                    "_currentRenderer2": null,
                    "_currentValue": undefined,
                    "_currentValue2": undefined,
                    "_threadCount": 0,
                    "displayName": "Router",
                  },
                },
                "updateQueue": null,
              },
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": [Circular],
              "tag": 1,
              "treeBaseDuration": 0,
              "type": [Function],
              "updateQueue": Object {
                "baseQueue": null,
                "baseState": null,
                "effects": null,
                "shared": Object {
                  "pending": null,
                },
              },
            },
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "component": <ReferralDetailsView
                data={Object {}}
                isAuthenticated={true}
                mockData={
                  Object {
                    "additionData": Object {
                      "feesValue": "$0.25",
                      "offersPercent": 5,
                      "offersReward": 5,
                    },
                    "campaignPercent": "50%",
                    "firstPercent": "50%",
                    "indexPercent": "30%",
                    "referralDuration": 90,
                    "referralsPercent": "20%",
                    "secondPercent": "40%",
                    "suspendedTimer": 30,
                    "username": "vallon",
                  }
                }
              />,
              "path": "/rewards/referral-details/vallon",
            },
            "refs": Object {},
            "state": null,
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "component": <ReferralDetailsView
              data={Object {}}
              isAuthenticated={true}
              mockData={
                Object {
                  "additionData": Object {
                    "feesValue": "$0.25",
                    "offersPercent": 5,
                    "offersReward": 5,
                  },
                  "campaignPercent": "50%",
                  "firstPercent": "50%",
                  "indexPercent": "30%",
                  "referralDuration": 90,
                  "referralsPercent": "20%",
                  "secondPercent": "40%",
                  "suspendedTimer": 30,
                  "username": "vallon",
                }
              }
            />,
            "path": "/rewards/referral-details/vallon",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "childContextTypes": Object {
      "intl": [Function],
    },
    "context": Object {
      "intl": Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      },
    },
  },
  Symbol(enzyme.__linkedRoots__): Array [],
  Symbol(enzyme.__unrendered__): <BrowserRouter
    intl={
      Object {
        "defaultFormats": Object {},
        "defaultLocale": "en",
        "formatDate": [Function],
        "formatHTMLMessage": [Function],
        "formatMessage": [Function],
        "formatNumber": [Function],
        "formatPlural": [Function],
        "formatRelative": [Function],
        "formatTime": [Function],
        "formats": Object {},
        "formatters": Object {
          "getDateTimeFormat": [Function],
          "getMessageFormat": [Function],
          "getNumberFormat": [Function],
          "getPluralFormat": [Function],
          "getRelativeFormat": [Function],
        },
        "locale": "en",
        "messages": Object {},
        "now": [Function],
        "onError": [Function],
        "textComponent": "span",
        "timeZone": null,
      }
    }
  >
    <Route
      component={
        <ReferralDetailsView
          data={Object {}}
          isAuthenticated={true}
          mockData={
            Object {
              "additionData": Object {
                "feesValue": "$0.25",
                "offersPercent": 5,
                "offersReward": 5,
              },
              "campaignPercent": "50%",
              "firstPercent": "50%",
              "indexPercent": "30%",
              "referralDuration": 90,
              "referralsPercent": "20%",
              "secondPercent": "40%",
              "suspendedTimer": 30,
              "username": "vallon",
            }
          }
        />
      }
      path="/rewards/referral-details/vallon"
    />
  </BrowserRouter>,
  Symbol(enzyme.__updatedBy__): null,
}
`;
